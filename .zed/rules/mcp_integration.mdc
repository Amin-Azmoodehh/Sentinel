---
description: MCP integration guidelines for SentinelTM
globs: **/*
alwaysApply: true
---

# MCP Integration Rules

## üîå Tool Naming Convention

### Task Management
```javascript
// ‚úÖ CORRECT - Use sentinel_task with actions
mcp0_sentinel_task({ action: 'createTask', payload: { title: 'Fix bug' } })
mcp0_sentinel_task({ action: 'updateTask', payload: { id: 1, status: 'done' } })
mcp0_sentinel_task({ action: 'listTasks', payload: { status: 'open' } })
mcp0_sentinel_task({ action: 'nextQueuedTask' })

// ‚ùå WRONG - These tools don't exist
mcp0_task_update(...)
mcp0_task_create(...)
mcp0_update_task(...)
```

### Available Task Actions
- `createTask`, `getTask`, `listTasks`, `updateTask`, `deleteTask`
- `createSubtask`, `listSubtasks`, `updateSubtask`, `deleteSubtask`
- `priorityQueue`, `nextQueuedTask`
- `assignTags`, `removeTags`, `listTags`, `renameTag`, `copyTag`, `deleteTag`

## üîí Security Management

```javascript
// Validate path security
mcp0_sentinel_security({ action: 'validatePath', payload: { path: 'src/app.ts' } })

// Add to whitelist
mcp0_sentinel_security({ action: 'addWhitelist', payload: { path: 'src/**' } })

// Add to blacklist
mcp0_sentinel_security({ action: 'addBlacklist', payload: { path: 'node_modules', reason: 'Dependencies' } })

// Get lists
mcp0_sentinel_security({ action: 'getWhitelist' })
mcp0_sentinel_security({ action: 'getBlacklist' })
```

## üìä Dashboard & Monitoring

```javascript
// Get project metrics
mcp0_sentinel_dashboard({ action: 'getMetrics' })
// Returns: files, tasks, quality, system stats

// Generate report
mcp0_sentinel_dashboard({ action: 'generateReport' })
// Returns: Markdown formatted report
```

## üîÑ CI/CD Integration

```javascript
// Generate GitHub Actions workflow
mcp0_sentinel_cicd({
  action: 'generateWorkflow',
  payload: { provider: 'github', projectName: 'my-project' }
})

// Generate GitLab CI
mcp0_sentinel_cicd({
  action: 'generateWorkflow',
  payload: { provider: 'gitlab', projectName: 'my-project' }
})

// Run pipeline locally
mcp0_sentinel_cicd({
  action: 'runPipeline',
  payload: {
    config: {
      provider: 'custom',
      stages: [
        { name: 'test', commands: ['npm test'] },
        { name: 'build', commands: ['npm run build'] }
      ]
    }
  }
})

// Run quality gate
mcp0_sentinel_cicd({ action: 'runQualityGate' })

// Get CI/CD history
mcp0_sentinel_cicd({ action: 'getHistory', payload: { count: 10 } })
```

## üìÅ File Operations

### Path Rules
```javascript
// ‚úÖ CORRECT - Workspace-relative paths
mcp0_file_read({ path: 'project/src/app.ts' })
mcp0_file_write({ path: 'project/data/config.json', content: '...' })
mcp0_file_mkdir({ paths: ['project/app/core', 'project/data'] })

// ‚ùå WRONG - Absolute paths fail
mcp0_file_read({ path: 'd:\\project\\file.ts' })
mcp0_file_read({ path: '/home/user/project/file.ts' })
```

### File Tools
- `mcp0_file_read` - Read file contents
- `mcp0_file_write` - Write/append to file
- `mcp0_file_delete` - Delete file/directory
- `mcp0_file_mkdir` - Create directories

## üîç Index Operations

### Index Build (CRITICAL)
```javascript
// ‚úÖ CORRECT - Always specify root to avoid EBUSY
mcp0_index_build({ root: 'project' })
mcp0_index_build({ root: 'src' })

// ‚ùå WRONG - Will scan entire workspace including locked binaries
mcp0_index_build()
mcp0_index_build({ root: '.' })
```

### Advanced Indexing
```javascript
// Index with filters
mcp0_sentinel_index({
  action: 'advanced',
  payload: {
    root: 'src',
    exclude: ['*.test.ts', '*.spec.ts'],
    include: ['*.ts', '*.js'],
    maxFileSize: 1048576,
    externalProjects: ['../shared-lib']
  }
})

// Advanced search
mcp0_sentinel_index({
  action: 'searchAdvanced',
  payload: {
    query: 'createTask',
    filters: {
      fileTypes: ['.ts', '.js'],
      excludePaths: ['node_modules'],
      maxResults: 100
    }
  }
})
```

**Why root is required:**
- Prevents scanning locked executables (Windsurf.exe, etc.)
- Avoids EBUSY errors
- Improves indexing performance
- Scopes to relevant project files only

### Index Query
```javascript
// Search files
mcp0_index_query({
  kind: 'search',
  query: 'createTask',
  limit: 20
})

// Find symbols
mcp0_index_query({
  kind: 'symbols',
  name: 'Task',
  filePath: 'src/app.ts'
})

// Get document
mcp0_index_query({
  kind: 'document',
  filePath: 'src/app.ts',
  maxBytes: 50000
})
```

## üñ•Ô∏è Shell Execution

### Security Rules
```javascript
// ‚úÖ CORRECT - Allowed commands only
mcp0_shell_execute({ command: 'npm test' })
mcp0_shell_execute({ command: 'git status' })

// ‚ùå WRONG - Blocked by security policy
mcp0_shell_execute({ command: 'rm -rf /' })
mcp0_shell_execute({ command: 'del /f /q *' })
```

**If command is blocked:**
```
Command 'rm' blocked by security policy.
Allowed commands: ls, dir, cat, npm, git...
Hint: Use mcp0_file_* tools for file operations instead
```

### Shell Tools
- `mcp0_shell_execute` - Run single command
- `mcp0_shell_detect` - Detect available shells
- `mcp0_shell_list` - List allowed commands

## ‚úÖ Quality Gates

```javascript
// Run quality checks
mcp0_gate_run({ minScore: 95 })

// Get gate configuration
mcp0_gate_status()
```

**Returns:**
- `threshold` - Minimum passing score
- `security` - Forbidden patterns, allowed commands
- `defaults` - Provider/model settings

## ü§ñ Provider Management

```javascript
// Detect available providers
mcp0_sentinel_provider({ action: 'detect' })

// Set active provider
mcp0_sentinel_provider({
  action: 'setProvider',
  payload: { provider: 'gemini' }
})

// List models
mcp0_sentinel_provider({
  action: 'listModels',
  payload: { provider: 'qwen' }
})
```

**Supported Providers:**
- `gemini` (not `gemini-cli`)
- `qwen` (not `qwen-cli`)
- `codex` (not `codex-cli`)
- `ollama`

## üìä Response Schema

All MCP tools return:
```typescript
interface McpResponse<T> {
  success: boolean;
  data?: T;
  error?: {
    message: string;
    code?: string;
    details?: unknown;
  };
  hint?: string;        // Actionable suggestion
  nextSteps?: string[]; // Recommended actions
}
```

### Success Example
```json
{
  "success": true,
  "data": { "task": { "id": 1, "title": "Fix bug" } }
}
```

### Error Example
```json
{
  "success": false,
  "error": {
    "message": "Path must stay within workspace",
    "code": "ERR_VALIDATION"
  },
  "hint": "Use relative path like 'project/src/file.ts'",
  "nextSteps": ["Check workspace root", "Verify path format"]
}
```

## üéØ Best Practices

### 1. Always Scope Index Builds
```javascript
// ‚úÖ DO THIS
mcp0_index_build({ root: 'project' })

// ‚ùå NOT THIS
mcp0_index_build()
```

### 2. Use Workspace-Relative Paths
```javascript
// ‚úÖ DO THIS
mcp0_file_read({ path: 'project/file.ts' })

// ‚ùå NOT THIS
mcp0_file_read({ path: 'd:\\project\\file.ts' })
```

### 3. Check Tool Names
```javascript
// ‚úÖ DO THIS
mcp0_sentinel_task({ action: 'updateTask', payload: {...} })

// ‚ùå NOT THIS
mcp0_task_update({...})  // Doesn't exist
```

### 4. Handle Errors with Hints
```javascript
if (!response.success) {
  console.log(response.error.message);
  if (response.hint) {
    console.log('Hint:', response.hint);
  }
  if (response.nextSteps) {
    console.log('Next steps:', response.nextSteps);
  }
}
```

### 5. Use File Tools Instead of Shell
```javascript
// ‚úÖ DO THIS
mcp0_file_delete({ path: 'temp.txt' })

// ‚ùå NOT THIS
mcp0_shell_execute({ command: 'rm temp.txt' })  // Blocked
```

## üîß Troubleshooting

### "Path must stay within workspace"
- **Cause:** Using absolute paths
- **Fix:** Use relative paths like `project/src/file.ts`

### "Index root required"
- **Cause:** Missing or invalid root parameter
- **Fix:** Always specify `root: 'project'` or `root: 'src'`

### "Command blocked by security policy"
- **Cause:** Attempting to run forbidden command
- **Fix:** Use file tools or check allowed commands with `mcp0_shell_list()`

### "Task not found" / Wrong tool name
- **Cause:** Using incorrect tool name
- **Fix:** Use `mcp0_sentinel_task` with action parameter

## üìö Complete Tool List

### Task Management
- `mcp0_sentinel_task` - Unified task API
- `mcp0_task_create` - Quick task creation
- `mcp0_task_list` - List tasks
- `mcp0_task_next` - Get next task
- `mcp0_task_expand` - Get task details

### File Operations
- `mcp0_file_read` - Read file
- `mcp0_file_write` - Write file
- `mcp0_file_delete` - Delete file
- `mcp0_file_mkdir` - Create directories

### Index Operations
- `mcp0_index_build` - Build index
- `mcp0_index_query` - Query index

### Shell Operations
- `mcp0_shell_execute` - Run command
- `mcp0_shell_detect` - Detect shells
- `mcp0_shell_list` - List allowed commands

### Quality & System
- `mcp0_gate_run` - Run quality gates
- `mcp0_gate_status` - Get gate config
- `mcp0_sentinel_provider` - Manage providers
- `mcp0_sentinel_security` - Path security management
- `mcp0_sentinel_dashboard` - Project monitoring
- `mcp0_sentinel_cicd` - CI/CD integration

---

**Follow these rules for reliable MCP integration with SentinelTM.**
