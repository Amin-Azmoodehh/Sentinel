{
  "$schema": "https://json-schema.org/draft-07/schema",
  "version": "1.6.1",
  "contract": {
    "version": "3.0",
    "name": "Zero Tolerance Python Contract",
    "enforcement": "MANDATORY",
    "binding": "ABSOLUTE",
    "violations": "AUTOMATIC_REJECTION"
  },
  "entrypoint": {
    "filename": "main.py",
    "maxLines": 4,
    "mustImportOnly": true,
    "noLogic": true,
    "noSideEffects": true
  },
  "style": {
    "maxLineLength": 79,
    "pep8Compliant": true,
    "noSideEffectsOnImport": true,
    "absoluteImportsOnly": true,
    "noRelativeImports": true,
    "noWildcardImports": true
  },
  "typing": {
    "typeHintsRequired": true,
    "typeHintsCoverage": 100,
    "enforceEverywhere": true
  },
  "forbidden": {
    "functions": ["print(", "eval(", "exec(", "console.log("],
    "modules": ["subprocess", "os.system"],
    "hardcodedStrings": true,
    "hardcodedNumbers": true,
    "hardcodedUrls": true,
    "hardcodedRegex": true
  },
  "externalization": {
    "textsPath": "data/texts/*.yml",
    "configPath": "data/config/*.yml",
    "enforceNoHardcodedStrings": true,
    "enforceNoHardcodedNumbers": true,
    "allConfigFromYaml": true
  },
  "architecture": {
    "maxFileLines": 300,
    "modularOnly": true,
    "separationOfConcerns": true
  },
  "i18n": {
    "logsLanguage": "en",
    "uiLanguage": "fa",
    "enforceLogLanguage": true,
    "enforceUiLanguage": true
  },
  "quality": {
    "minCoverage": 80,
    "requireTests": true,
    "requireDocs": true,
    "scoreThreshold": 100,
    "zeroTolerance": true
  },
  "validation": {
    "preGeneration": {
      "acknowledgmentRequired": true,
      "explicitRulesCheck": true
    },
    "postGeneration": {
      "selfAssessmentRequired": true,
      "evidenceRequired": true,
      "validationCommands": [
        "wc -l main.py",
        "grep -r 'print(' app/",
        "grep -r '\".*\"' app/ | wc -l",
        "find . -name '*.py' -exec wc -l {} \\;"
      ]
    },
    "scoring": {
      "totalRules": 10,
      "passingScore": 10,
      "failureAction": "REJECT_AND_REWRITE"
    }
  },
  "deliverables": {
    "required": [
      "Pre-Generation Acknowledgment",
      "Generated Code",
      "Self-Assessment Table",
      "Validation Commands Output",
      "Final Verdict (PASS/FAIL)"
    ],
    "mandatoryFormat": {
      "preGeneration": "I acknowledge the following BINDING rules: ✓ main.py will be exactly ≤4 lines ✓ Zero hardcoded strings/numbers/URLs ✓ Zero print() statements ✓ All config from YAML files ✓ Type hints on every function ✓ PEP8 with ≤79 chars/line ✓ Files ≤300 lines maximum ✓ Absolute imports only ✓ English logs / Persian UI ✓ Modular architecture. I will provide self-assessment after generation.",
      "selfAssessment": "MANDATORY_TABLE_WITH_EVIDENCE",
      "finalVerdict": "Score: X/12, Grade: PASS ✅ / FAIL ❌"
    }
  },
  "enforcement": {
    "scoreRequired": 12,
    "totalRules": 12,
    "passingThreshold": "12/12",
    "failureAction": "COMPLETE_REWRITE_REQUIRED",
    "noExceptions": true,
    "evidenceRequired": true,
    "contractualBinding": true
  },
  "validationCommands": {
    "mainPyLines": "wc -l main.py",
    "hardcodedStrings": "grep -r '\".*\"' app/ | wc -l",
    "printStatements": "grep -r 'print(' app/",
    "fileLineLimits": "find . -name '*.py' -exec wc -l {} \\;",
    "lineLength": "find app/ -name '*.py' -exec grep -n '.\\{80,\\}' {} +",
    "relativeImports": "grep -r 'from \\.' app/",
    "typeHints": "python -m mypy app/ --strict"
  },
  "onlyLoggingAllowed": true,
  "description": "Use logging module only; console in English, chat in Persian"
}
